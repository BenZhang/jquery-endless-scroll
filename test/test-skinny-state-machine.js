// Generated by CoffeeScript 1.3.3

describe('Skinny Coffee Machine', function() {
  beforeEach(function() {
    var self;
    self = this;
    this.coffeeMachine = {};
    this.actionPerformed = false;
    this.coffeeMachine.power = new SkinnyCoffeeMachine({
      "default": 'off',
      events: {
        turnOn: {
          off: 'on'
        },
        turnOff: {
          on: 'off'
        }
      },
      actions: {
        turnOn: function(from, to) {
          return self.actionPerformed = "" + (from.toUpperCase()) + " to " + (to.toUpperCase());
        },
        turnOff: function(from, to) {
          return self.actionPerformed = "" + (from.toUpperCase()) + " to " + (to.toUpperCase());
        }
      }
    });
    return this.coffeeMachine.mode = new SkinnyCoffeeMachine({
      "default": 'latte',
      events: {
        next: {
          latte: 'cappuccino',
          cappuccino: 'espresso',
          espresso: 'lungo',
          lungo: 'latte'
        },
        last: {
          latte: 'lungo',
          lungo: 'espresso',
          espresso: 'cappuccino',
          cappuccino: 'latte'
        }
      }
    });
  });
  return describe('States', function() {
    it('lists all states', function() {
      this.coffeeMachine.power.allStates().should.eql(['off', 'on']);
      return this.coffeeMachine.mode.allStates().should.eql(['latte', 'cappuccino', 'espresso', 'lungo']);
    });
    it('gets the default state', function() {
      this.coffeeMachine.power.defaultState().should.eql('off');
      return this.coffeeMachine.mode.defaultState().should.eql('latte');
    });
    it('changes state', function() {
      this.coffeeMachine.power.currentState().should.eql('off');
      this.coffeeMachine.power["switch"]('turnOn');
      this.coffeeMachine.power.currentState().should.eql('on');
      this.coffeeMachine.mode.currentState().should.eql('latte');
      this.coffeeMachine.mode.change('next');
      this.coffeeMachine.mode.currentState().should.eql('cappuccino');
      this.coffeeMachine.mode.change('last');
      return this.coffeeMachine.mode.currentState().should.eql('latte');
    });
    it('changes state multiple times', function() {
      this.coffeeMachine.mode.currentState().should.eql('latte');
      this.coffeeMachine.mode.change('next').change('next').change('next').change('next');
      this.coffeeMachine.mode.currentState().should.eql('latte');
      this.coffeeMachine.mode.change('next', 4);
      return this.coffeeMachine.mode.currentState().should.eql('latte');
    });
    return it('performs actions when change the state', function() {
      this.actionPerformed.should.eql(false);
      this.coffeeMachine.power["switch"]('turnOn');
      return this.actionPerformed.should.eql('OFF to ON');
    });
  });
});
